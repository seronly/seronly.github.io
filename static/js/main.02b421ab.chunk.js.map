{"version":3,"sources":["App.js","index.js"],"names":["_twitterUrl","colors","App","props","state","quoteText","quoteAuthor","twitterUrl","color","getQuote","bind","handleGetQuote","changeColor","this","fetch","then","resp","json","obj","quotes","data","index","Math","floor","random","length","setState","quote","author","encodeURIComponent","randColor","document","body","style","backgroundColor","id","className","onClick","class","href","target","rel","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"8OAKMA,EAAc,yCAEdC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA0EaC,E,kDApEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,GACXC,YAAa,GACbC,WAAYP,EACZQ,MAAO,IAET,EAAKC,WACL,EAAKA,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAXF,E,sDAcnB,WACEG,KAAKD,gB,sBAGP,WAAY,IAAD,OACTE,MAzCS,0IA0CNC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OAASA,EAAIC,UAClBJ,MAAK,SAACK,GACL,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAC9C,EAAKC,SAAS,CACZrB,UAAWe,EAAKC,GAAOM,MACvBrB,YAAac,EAAKC,GAAOO,OACzBrB,WAAYP,EAAc6B,mBAAmBT,EAAKC,GAAOM,MAAQ,KAAOP,EAAKC,GAAOO,e,yBAK5F,WAEE,IADA,IAAIE,EAAY7B,EAAOqB,KAAKC,MAAMD,KAAKE,SAAWvB,EAAOwB,SAClDK,IAAcjB,KAAKT,MAAMI,OAC9BsB,EAAY7B,EAAOqB,KAAKC,MAAMD,KAAKE,SAAWvB,EAAOwB,SAEvDZ,KAAKa,SAAS,CACZlB,MAAOsB,IAETC,SAASC,KAAKC,MAAMC,gBAAkBJ,I,4BAGxC,WACEjB,KAAKJ,WACLI,KAAKD,gB,oBAGP,WACE,OACE,sBAAKuB,GAAG,YAAR,UACE,qBAAKC,UAAU,aAAf,SACE,sBAAMD,GAAG,OAAOF,MAAO,CAAEzB,MAAOK,KAAKT,MAAMI,OAA3C,SAAqDK,KAAKT,MAAMC,cAElE,qBAAK+B,UAAU,eAAf,SACE,mBAAGD,GAAG,SAASF,MAAO,CAAEzB,MAAOK,KAAKT,MAAMI,OAA1C,SAAmD,6BAAKK,KAAKT,MAAME,kBAErE,sBAAK8B,UAAU,UAAf,UACE,wBAAQC,QAASxB,KAAKF,eAAgB2B,MAAM,SAASH,GAAG,YAAYF,MAAO,CAAEC,gBAAiBrB,KAAKT,MAAMI,OAAzG,uBACA,mBAAG8B,MAAM,SAASH,GAAG,cAAcI,KAAM1B,KAAKT,MAAMG,WAAYiC,OAAO,SAASC,IAAI,sBAAsBR,MAAO,CAAEC,gBAAiBrB,KAAKT,MAAMI,OAA/I,SAAwJ,mBAAG8B,MAAM,8B,GA5DzJI,IAAMC,WChBxBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,yCAAW,mBAAGP,KAAK,6BAA6BC,OAAO,SAASC,IAAI,sBAAzD,2BAEbV,SAASgB,eAAe,W","file":"static/js/main.02b421ab.chunk.js","sourcesContent":["import './css/App.scss';\nimport React from 'react';\n\nconst _url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n\nconst _twitterUrl = 'https://twitter.com/intent/tweet?text='\n\nconst colors = [\n  '#16a085',\n  '#27ae60',\n  '#2c3e50',\n  '#f39c12',\n  '#e74c3c',\n  '#9b59b6',\n  '#FB6964',\n  '#342224',\n  '#472E32',\n  '#BDBB99',\n  '#77B1A9',\n  '#73A857'\n];\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quoteText: '',\n      quoteAuthor: '',\n      twitterUrl: _twitterUrl,\n      color: ''\n    };\n    this.getQuote();\n    this.getQuote = this.getQuote.bind(this);\n    this.handleGetQuote = this.handleGetQuote.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n  };\n\n  componentWillMount() {\n    this.changeColor();\n  }\n\n  getQuote() {\n    fetch(_url)\n      .then((resp) => resp.json())\n      .then((obj) => obj.quotes)\n      .then((data) => {\n        const index = Math.floor(Math.random() * data.length);\n        this.setState({\n          quoteText: data[index].quote,\n          quoteAuthor: data[index].author,\n          twitterUrl: _twitterUrl + encodeURIComponent(data[index].quote + \" -\" + data[index].author)\n        });\n      });\n  };\n\n  changeColor() {\n    let randColor = colors[Math.floor(Math.random() * colors.length)]\n    while (randColor === this.state.color) {\n      randColor = colors[Math.floor(Math.random() * colors.length)]\n    }\n    this.setState({\n      color: randColor,\n    })\n    document.body.style.backgroundColor = randColor;\n  }\n\n  handleGetQuote() {\n    this.getQuote();\n    this.changeColor();\n  };\n\n  render() {\n    return (\n      <div id=\"quote-box\" >\n        <div className=\"quote-text\">\n          <span id=\"text\" style={{ color: this.state.color }}>{this.state.quoteText}</span>\n        </div>\n        <div className=\"quote-author\">\n          <p id=\"author\" style={{ color: this.state.color }}><em>{this.state.quoteAuthor}</em></p>\n        </div>\n        <div className=\"buttons\">\n          <button onClick={this.handleGetQuote} class=\"button\" id=\"new-quote\" style={{ backgroundColor: this.state.color }}>New quote</button>\n          <a class=\"button\" id=\"tweet-quote\" href={this.state.twitterUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={{ backgroundColor: this.state.color }}><i class=\"fa fa-twitter\"></i></a>\n        </div>\n      </div >\n\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <footer>by <a href=\"https://github.com/seronly\" target=\"_blank\" rel=\"noreferrer noopener\">seronly</a></footer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}